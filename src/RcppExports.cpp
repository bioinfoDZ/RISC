// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sqrt_sp
arma::sp_mat sqrt_sp(arma::sp_mat X);
RcppExport SEXP _RISC_sqrt_sp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(sqrt_sp(X));
    return rcpp_result_gen;
END_RCPP
}
// cent_sp_d
arma::mat cent_sp_d(arma::sp_mat X);
RcppExport SEXP _RISC_cent_sp_d(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(cent_sp_d(X));
    return rcpp_result_gen;
END_RCPP
}
// multiply_sp_sp
arma::sp_mat multiply_sp_sp(arma::sp_mat X, arma::sp_mat Y);
RcppExport SEXP _RISC_multiply_sp_sp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply_sp_sp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// multiply_sp_d
arma::mat multiply_sp_d(arma::sp_mat X, arma::sp_mat Y);
RcppExport SEXP _RISC_multiply_sp_d(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply_sp_d(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// multiply_d_d
arma::mat multiply_d_d(arma::mat X, arma::mat Y);
RcppExport SEXP _RISC_multiply_d_d(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply_d_d(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// multiply_sp_d_sp
arma::sp_mat multiply_sp_d_sp(arma::sp_mat X, arma::mat Y);
RcppExport SEXP _RISC_multiply_sp_d_sp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply_sp_d_sp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// multiply_sp_d_v
arma::vec multiply_sp_d_v(arma::sp_mat X, arma::mat Y);
RcppExport SEXP _RISC_multiply_sp_d_v(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply_sp_d_v(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// crossprod_sp_sp
arma::sp_mat crossprod_sp_sp(arma::sp_mat X, arma::sp_mat Y);
RcppExport SEXP _RISC_crossprod_sp_sp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(crossprod_sp_sp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// crossprod_sp_d
arma::mat crossprod_sp_d(arma::sp_mat X, arma::sp_mat Y);
RcppExport SEXP _RISC_crossprod_sp_d(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(crossprod_sp_d(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// crossprod_d_d
arma::mat crossprod_d_d(arma::mat X, arma::mat Y);
RcppExport SEXP _RISC_crossprod_d_d(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(crossprod_d_d(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// tcrossprod_sp_sp
arma::sp_mat tcrossprod_sp_sp(arma::sp_mat X, arma::sp_mat Y);
RcppExport SEXP _RISC_tcrossprod_sp_sp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(tcrossprod_sp_sp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// tcrossprod_d_d
arma::mat tcrossprod_d_d(arma::mat X, arma::mat Y);
RcppExport SEXP _RISC_tcrossprod_d_d(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(tcrossprod_d_d(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// winsorize_
arma::rowvec winsorize_(arma::rowvec x, double y);
RcppExport SEXP _RISC_winsorize_(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(winsorize_(x, y));
    return rcpp_result_gen;
END_RCPP
}
// lm_coef
arma::colvec lm_coef(arma::mat X, arma::colvec y);
RcppExport SEXP _RISC_lm_coef(SEXP XSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lm_coef(X, y));
    return rcpp_result_gen;
END_RCPP
}
// lm_
Rcpp::List lm_(arma::mat X, arma::colvec y);
RcppExport SEXP _RISC_lm_(SEXP XSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lm_(X, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RISC_sqrt_sp", (DL_FUNC) &_RISC_sqrt_sp, 1},
    {"_RISC_cent_sp_d", (DL_FUNC) &_RISC_cent_sp_d, 1},
    {"_RISC_multiply_sp_sp", (DL_FUNC) &_RISC_multiply_sp_sp, 2},
    {"_RISC_multiply_sp_d", (DL_FUNC) &_RISC_multiply_sp_d, 2},
    {"_RISC_multiply_d_d", (DL_FUNC) &_RISC_multiply_d_d, 2},
    {"_RISC_multiply_sp_d_sp", (DL_FUNC) &_RISC_multiply_sp_d_sp, 2},
    {"_RISC_multiply_sp_d_v", (DL_FUNC) &_RISC_multiply_sp_d_v, 2},
    {"_RISC_crossprod_sp_sp", (DL_FUNC) &_RISC_crossprod_sp_sp, 2},
    {"_RISC_crossprod_sp_d", (DL_FUNC) &_RISC_crossprod_sp_d, 2},
    {"_RISC_crossprod_d_d", (DL_FUNC) &_RISC_crossprod_d_d, 2},
    {"_RISC_tcrossprod_sp_sp", (DL_FUNC) &_RISC_tcrossprod_sp_sp, 2},
    {"_RISC_tcrossprod_d_d", (DL_FUNC) &_RISC_tcrossprod_d_d, 2},
    {"_RISC_winsorize_", (DL_FUNC) &_RISC_winsorize_, 2},
    {"_RISC_lm_coef", (DL_FUNC) &_RISC_lm_coef, 2},
    {"_RISC_lm_", (DL_FUNC) &_RISC_lm_, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RISC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
